worker_processes 1;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    server {
        listen 80;
        server_name www.verby.eu;
        root /app/www/dist;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 80;
        server_name app.verby.eu;
        root /app/app/dist;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 80;
        server_name api.verby.eu;

        location / {
            proxy_pass http://localhost:13337;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;

    server {
        listen 80;

        # [www.verby.eu](www.verby.eu) → /www
        server_name [www.verby.eu](www.verby.eu);
        root /app/www/dist;  # Adjust if your build output is different

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 80;

        # app.verby.eu → /app
        server_name app.verby.eu;
        root /app/app/dist;

        location / {
            try_files $uri $uri/ /index.html;
        }
    }

    server {
        listen 80;

        # api.verby.eu → /server (Node backend)
        server_name api.verby.eu;

        location / {
            proxy_pass http://localhost:5000; # Or whatever port your server runs on
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}