version: '3.8'

services:
  # Main Application (API + Frontend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: verby-app
    ports:
      - "10000:10000"
    environment:
      # Node Environment
      NODE_ENV: production
      PORT: 10000
      
      # Database Configuration
      DATABASE_URL: postgresql://postgres:password@postgres:5432/lovable_merge_mate
      REDIS_URL: redis://redis:6379
      
      # JWT Secrets (generate secure ones for production)
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-change-this-in-production}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-your-super-secure-refresh-secret-change-this-in-production}
      
      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost:10000/api/gmail/callback}
      
      # API Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:10000}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:10000,https://app.verby.eu,https://verby.eu,https://api.verby.eu}
      
      # AI Services
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      ELEVENLABS_API_KEY: ${ELEVENLABS_API_KEY}
      
      # Security & Performance
      BCRYPT_ROUNDS: 12
      SESSION_TIMEOUT: 86400
      ACCESS_TOKEN_EXPIRY: 900
      REFRESH_TOKEN_EXPIRY: 604800
      RATE_LIMIT_WINDOW: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Persist any uploaded files (if needed)
      - app_uploads:/app/uploads
    networks:
      - verby-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: verby-postgres
    environment:
      POSTGRES_DB: lovable_merge_mate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lovable_merge_mate"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - verby-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: verby-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - verby-network
    restart: unless-stopped

  # Database Migration (runs once)
  migrate:
    image: postgres:15-alpine
    container_name: verby-migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: lovable_merge_mate
      PGUSER: postgres
      PGPASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./database/migrations:/migrations:ro
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL to be ready...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        for file in /migrations/*.sql; do
          if [ -f \"$$file\" ]; then
            echo \"Executing: $$file\" &&
            psql -f \"$$file\" || exit 1
          fi
        done &&
        echo 'Database migration completed successfully!'
      "
    networks:
      - verby-network
    restart: "no"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  verby-network:
    driver: bridge 